<?php

require_once __DIR__ . '/../vendor/autoload.php';

use Relayo\SDK\RelayoSDK;
use Relayo\SDK\Exceptions\ApiException;
use Relayo\SDK\Exceptions\AuthenticationException;
use Relayo\SDK\Exceptions\RateLimitException;

// Configura√ß√£o do SDK
$relayo = RelayoSDK::create('https://api.relayo.com.br');

echo "=== Relayo PHP SDK - Tratamento de Erros ===\n\n";

// Exemplo 1: Erro de autentica√ß√£o
echo "1. Testando erro de autentica√ß√£o...\n";
try {
    $auth = $relayo->auth()->login('email_invalido@test.com', 'senha_errada');
    echo "‚ùå Login n√£o deveria ter funcionado!\n";
    
} catch (AuthenticationException $e) {
    echo "‚úÖ Erro de autentica√ß√£o capturado corretamente:\n";
    echo "   Mensagem: " . $e->getMessage() . "\n";
    echo "   C√≥digo: " . $e->getCode() . "\n\n";
}

// Exemplo 2: Tentativa de opera√ß√£o sem autentica√ß√£o
echo "2. Testando opera√ß√£o sem autentica√ß√£o...\n";
try {
    $instances = $relayo->whatsapp()->list();
    echo "‚ùå Opera√ß√£o n√£o deveria ter funcionado sem token!\n";
    
} catch (AuthenticationException $e) {
    echo "‚úÖ Erro de autentica√ß√£o capturado corretamente:\n";
    echo "   Mensagem: " . $e->getMessage() . "\n\n";
}

// Exemplo 3: Erro de API gen√©rico
echo "3. Testando erro gen√©rico da API...\n";
try {
    // Simular um erro 404
    $instance = $relayo->whatsapp()->get('id-inexistente');
    echo "‚ùå Opera√ß√£o n√£o deveria ter funcionado!\n";
    
} catch (ApiException $e) {
    echo "‚úÖ Erro da API capturado corretamente:\n";
    echo "   Mensagem: " . $e->getMessage() . "\n";
    echo "   C√≥digo: " . $e->getCode() . "\n\n";
}

// Exemplo 4: Tratamento de m√∫ltiplos tipos de erro
echo "4. Testando tratamento de m√∫ltiplos erros...\n";

function executeApiOperation($relayo, $operation) {
    try {
        return $operation();
        
    } catch (AuthenticationException $e) {
        echo "üîê Erro de autentica√ß√£o: " . $e->getMessage() . "\n";
        echo "   A√ß√£o: Reautenticar usu√°rio\n";
        return null;
        
    } catch (RateLimitException $e) {
        echo "‚è±Ô∏è  Rate limit excedido: " . $e->getMessage() . "\n";
        echo "   A√ß√£o: Aguardar e tentar novamente\n";
        return null;
        
    } catch (ApiException $e) {
        echo "üö® Erro da API: " . $e->getMessage() . "\n";
        echo "   C√≥digo: " . $e->getCode() . "\n";
        echo "   A√ß√£o: Verificar logs e contatar suporte\n";
        return null;
        
    } catch (\Exception $e) {
        echo "üí• Erro inesperado: " . $e->getMessage() . "\n";
        echo "   A√ß√£o: Verificar configura√ß√£o\n";
        return null;
    }
}

// Testar diferentes opera√ß√µes
echo "   Testando login com credenciais inv√°lidas...\n";
$result = executeApiOperation($relayo, function() use ($relayo) {
    return $relayo->auth()->login('invalid@test.com', 'wrong');
});

echo "   Testando opera√ß√£o sem autentica√ß√£o...\n";
$result = executeApiOperation($relayo, function() use ($relayo) {
    return $relayo->whatsapp()->list();
});

echo "\n";

// Exemplo 5: Retry autom√°tico (simulado)
echo "5. Simulando retry autom√°tico...\n";

function retryOperation($operation, $maxRetries = 3) {
    $attempt = 0;
    
    while ($attempt < $maxRetries) {
        try {
            $attempt++;
            echo "   Tentativa {$attempt}...\n";
            
            return $operation();
            
        } catch (RateLimitException $e) {
            if ($attempt >= $maxRetries) {
                echo "   ‚ùå N√∫mero m√°ximo de tentativas excedido\n";
                throw $e;
            }
            
            $delay = $attempt * 2; // Backoff exponencial
            echo "   ‚è±Ô∏è  Rate limit. Aguardando {$delay}s...\n";
            sleep($delay);
            
        } catch (ApiException $e) {
            echo "   ‚ùå Erro da API: " . $e->getMessage() . "\n";
            throw $e;
        }
    }
}

try {
    $result = retryOperation(function() use ($relayo) {
        // Simular uma opera√ß√£o que pode falhar
        return $relayo->whatsapp()->list();
    });
    
    echo "   ‚úÖ Opera√ß√£o conclu√≠da com sucesso!\n";
    
} catch (Exception $e) {
    echo "   ‚ùå Opera√ß√£o falhou ap√≥s todas as tentativas\n";
}

echo "\n=== Exemplo de tratamento de erros conclu√≠do! ===\n"; 